
Conversation opened. 1 read message.

Skip to content
A Set is an unordered collection data type that is iterable, mutable, and has no duplicate elements. Pythonâ€™s set class represents the mathematical notion of a set. The major advantage of using a set, as opposed to a list, is that it has a highly optimized method for checking whether a specific element is contained in the set. This is based on a data structure known as a hash table.

# set

set1 = {10,20,30,40,50}
set2 = {100,200,300,200,400,300}
list1 = [10,20,10,20,30,40,30,40]
print('set1 =',set1)
print('set2 =',set2)
print('list1 =',list1)
print('type(set1) =',type(set1))
print('type(list1) =',type(list1))


# remove duplicate elements from the list1
list1 = set(list1)
list1 = list(list1)
print('type(list1) =',type(list1))
print(list1)#[40, 10, 20, 30]

list1.sort
print(list1)

set1.add(60)
print('set1 =',set1)
set1.discard(60)
print('set1 =',set1)

# set1.remove(60)

print('10 in set1 =',10 in set1)

print('60 not in set1 =',60 not in set1)

set1.pop()
print('set1 =',set1)
set1.pop()
print('set1 =',set1)
set1.clear()
print(set1)
del set1
print('==============================')
print('==============================')
a = {10,20,30,40,50}
b= {30,40,50,60,70}
c = {60,70,80,90,100}
print('a =',a)
print('b =',b)
a.update(b)
print('a =',a)

print('a.issuperset(b) =',a.issuperset(b))
print('b.issuperset(a) =',b.issuperset(a))
print('a.issubset(b) =',a.issubset(b))
print('b.issubset(a) =',b.issubset(a))
print('==============================')
print('==============================')
print('b =',b)
print('c =',c)

# union
print('b|c =',b|c)
print('b.union(c) =',b.union(c))
print('==============================')
# intersection
print('b&c =',b&c)
print('b.intersection(c) =',b.intersection(c))
print('==============================')
print('b-c =',b-c) # b-c = {40, 50, 30}
print('b.difference(c) =',b.difference(c))  # b.difference(c) = {40, 50, 30}

print('c-b =',c-b)      # {80, 90, 100}
print('c.difference(b) =',c.difference(b))
print('==============================')

print('b^c =',b^c)      # {100, 40, 80, 50, 90, 30}
print('b.symmetric_difference(c) =',b.symmetric_difference(c))
set.txt
Displaying dic - Copy.txt.
